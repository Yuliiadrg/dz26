/*MINIMUM
1. –ù–∞–ø–∏—à–∏ –≤—Å—ñ –º–æ–∂–ª–∏–≤—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π.*/
/*
Every JavaScript function is actually a Function object. 
This can be seen with the code (function () {}).constructor === Function, which returns true. 
        A) –Ü—Å–Ω—É—é—Ç—å –≤–±—É–¥–æ–≤–∞–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:
                - alert(message)
                - prompt(message, default)
                - confirm(question)
–ê —Ç–∞–∫–æ–∂ –º–∏ –º–∏–∂–µ–º–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Å–∞–º–æ—Ç—É–∂–∫–∏:
        B) –§—É–Ω–∫—Ü–∏–∏ –≤–∏–¥–∞ "function declaration statement"
–ü—Ä–∏–∫–ª–∞–¥:
function square(number) {       –≤ —Ä—è–¥–∫—É 14 —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –∑ –∫–ª—é—á–µ–≤–∏–º —Å–ª–æ–≤–æ–º function –Ω–∞–∑–≤–æ—é square —Ç–∞ –∑–∞–¥–∞—î–º–æ —ó–π —Å–ø–∏—Å–æ–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ —á–µ—Ä–µ–∑ –∫–æ–º—É (—Ç—É—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä number). –Ø–∫—â–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –Ω–µ–º–∞—î, –º–∏ –∑–∞–ª–∏—à–∞—î–º–æ –ø—É—Å—Ç—ñ –¥—É–∂–∫–∏. –ü–æ—Ç—ñ–º –≤—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ —Ç—ñ–ª–æ —Ñ—É–Ω–∫—Ü—ñ—ó –∑ —Ñ—ñ–≥—É—Ä–Ω–æ—ó –¥—É–∂–∫–∏
  return number * number;       –≤ —Ä—è–¥–∫—É 15 –æ–≥–æ–ª–æ—à—É—î–º–æ –≤–∏—Ä–∞–∑ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏–π –æ–±—á–∏—Å–ª—é—î –≤–∏—Ä–∞–∑ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –π–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∞ –ø–∏—à–µ–º–æ –≤–∏—Ä–∞–∑ —ñ–∑ –∑–Ω–∞—á–µ–Ω–Ω—è–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ 
} 

        C) –§—É–Ω–∫—Ü–∏–∏ –≤–∏–¥–∞ "function definition expression" —Ç–æ–±—Ç–æ —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è —Ñ—É–Ω–∫—Ü—ñ—è —ñ –ø—Ä–∏—Å–≤–æ—é—î—Ç—å—Å—è —è–∫ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω—ñ–π
–∞–ª–µ –≤ —Ç–∞–∫–æ–º—É –≤–∏–ø–∞–¥–∫—É –º–∏ –Ω–µ –º–æ–∂–µ–º–æ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é –ø–µ—Ä–µ–¥ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—î—é –∑–º—ñ–Ω–Ω–æ—ó, —Ç–æ–º—É —â–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–¥—É —â–µ –Ω–µ –¥–æ—Å—è–≥–∞—î —á–∞—Å—Ç–∏–Ω–∏ –π–æ–≥–æ –∫–æ–¥—É –ù–ê –í–Ü–î–ú–Ü–ù–£ –≤—ñ–¥ (B) –≤–∏–¥—É
–ü—Ä–∏–∫–ª–∞–¥:
let square = function(number) { 
    return number * number
}
        D) –§—É–Ω–∫—Ü—ñ—ó –±–µ–∑ –Ω–∞–∑–≤–∏:
        function () { 
            alert(`Hello world`);
        }
        
        E) –Ü—Å–Ω—É—î —â–µ –æ–¥–∏–Ω –ø—Ä–æ—Å—Ç–∏–π —Ç–∞ –∫–æ—Ä–æ—Ç–∫–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π, —è–∫–∏–π —á–∞—Å—Ç–æ –¥–æ—Ü—ñ–ª—å–Ω—ñ—à–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∑–∞–º—ñ—Å—Ç—å
–§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ–≥–æ –í–∏—Ä–∞–∑—É. –¶–µ —Ç–∞–∫ –∑–≤–∞–Ω—ñ ‚Äú—Å—Ç—Ä—ñ–ª–∫–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó‚Äù, –ø—Ä–∏–∫–ª–∞–¥:
let func = (arg1, arg2, ..., argN) => expression; —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è —Ñ—É–Ω–∫—Ü—ñ—è —è–∫–∞ –ø—Ä–∏–π–º–∞—î –∞—Ä–≥—É–º–µ–Ω—Ç–∏, –ø–æ—Ç—ñ–º –≤–∏—Ä–∞—Ö–æ–≤—É—î –≤–∏—Ä–∞–∑ —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç
–∞–±–ª —è–∫—â–æ –∫—ñ–ª—å–∫–∞ –≤–∏—Ä–∞–∑—ñ–≤ —Ç–æ–¥—ñ –≤–∫–ª–∞–¥–µ–Ω–Ω—è —É —Ñ—ñ–≥—É—Ä–Ω–∏—Ö –¥—É–∂–∫–∞—Ö {
    return arg1 + arg2 + argN;
}*/

/*2. –°—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –±—É–¥–µ –≤–∏–≤–æ–¥–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–µ—Ä–µ–¥–∞–Ω–∏—Ö —ó–π –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤.*/
function getQuantityArg (){
    console.log(arguments.length);
}
getQuantityArg('Hello', 7, 'World');
getQuantityArg('Yes', 222);
getQuantityArg(989, 09, 8, 9098, 90, 'Good','Work','Well','done', 9890);
/*3. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –ø—Ä–∏–π–º–∞—î 2 —á–∏—Å–ª–∞ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î :
       -1, —è–∫—â–æ –ø–µ—Ä—à–µ —á–∏—Å–ª–æ –º–µ–Ω—à–µ, –Ω—ñ–∂ –¥—Ä—É–≥–µ; 
       1 - —è–∫—â–æ –ø–µ—Ä—à–µ —á–∏—Å–ª–æ –±—ñ–ª—å—à–µ, –Ω—ñ–∂ –¥—Ä—É–≥–µ; 
       0 - —è–∫—â–æ —á–∏—Å–ª–∞ —Ä—ñ–≤–Ω—ñ.*/
let a = -1;
let b = 1;
function getNumbers(numberFirst, numberSecond) {
    if (numberFirst < numberSecond)
    alert(`–ü–µ—Ä—à–µ —á–∏—Å–ª–æ –º–µ–Ω—à–µ, –Ω—ñ–∂ –¥—Ä—É–≥–µ –æ—Ç–∂–µ: ${a}`);
    if (numberFirst > numberSecond)
    alert(`–ü–µ—Ä—à–µ —á–∏—Å–ª–æ –±—ñ–ª—å—à–µ, –Ω—ñ–∂ –¥—Ä—É–≥–µ –æ—Ç–∂–µ: ${b}`);
    if (numberFirst === numberSecond)
    alert(`–ß–∏—Å–ª–∞ —Ä—ñ–≤–Ω—ñ –æ—Ç–∂–µ: ${0}`);
}
let numberFirst;
let numberSecond;
while (true) {
    numberFirst = +prompt(`–í–≤–µ–¥—ñ—Ç—å —Å–∞–º–µ —á–∏—Å–ª–æ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏`);
    if (numberFirst === null) {
        continue;
    }
    if (isNaN(numberFirst)) {
        continue;
    }
    break;
}
while (true) {
    numberSecond = +prompt(`–í–≤–µ–¥—ñ—Ç—å —Å–∞–º–µ —á–∏—Å–ª–æ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏`);
    if (numberSecond === null) {
        continue;
    }
    if (isNaN(numberSecond)) {
        continue;
    }
    break;
}
getNumbers(numberFirst, numberSecond);
/*4. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –æ–±—á–∏—Å–ª—é—î —Ñ–∞–∫—Ç–æ—Ä—ñ–∞–ª –ø–µ—Ä–µ–¥–∞–Ω–æ–≥–æ —ó–π —á–∏—Å–ª–∞.*/
function factorial(n) {
    return n ? n * factorial(n - 1) : 1;
}
let fac;
while (true) {
    fac = +prompt(`–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –¥–ª—è –≤–∏—Ä–∞—Ö—É–≤–∞–Ω–Ω—è —Ñ–∞–∫—Ç–æ—Ä—ñ–∞–ª—É`);
    if (fac === null) {
        continue;
    }
    if (isNaN(fac)) {
        continue;
    }
    if(fac < 0) {
        alert(`–í–≤–µ–¥—ñ—Ç—å –ø–æ–∑–∏—Ç–∏–≤–Ω–µ —á–∏—Å–ª–æ`);
        continue;
    }
    break;
}
console.log(`–§–∞–∫—Ç–æ—Ä—ñ–∞–ª —á–∏—Å–ª–∞ ${factorial(fac)}`);
/*5. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –ø—Ä–∏–π–º–∞—î —Ç—Ä–∏ –æ–∫—Ä–µ–º—ñ —Ü–∏—Ñ—Ä–∏ —ñ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î —ó—Ö –≤ –æ–¥–Ω–µ —á–∏—Å–ª–æ. 
–ù–∞–ø—Ä–∏–∫–ª–∞–¥: —Ü–∏—Ñ—Ä–∏ 1, 4, 9 –ø–µ—Ä–µ—Ç–≤–æ—Ä—è—Ç—å—Å—è –≤ —á–∏—Å–ª–æ 149.*/
let firstNumber = prompt(`–ó\'—î–¥–Ω–∞—î–º–æ —á–∏—Å–ª–∞ –¥–æ –∫—É–ø–∏, –≤–≤–µ–¥–∏ –ø–µ—Ä—à–µ:`);
let secondNumber = prompt(`–í–≤–µ–¥–∏ –¥—Ä—É–≥–µ:`);
let thirdNumber = prompt(`–í–≤–µ–¥–∏ —Ç—Ä–µ—Ç—î:`);
function createNumber (firstNumber, secondNumber, thirdNumber) {
    if (isNaN(firstNumber) || isNaN(secondNumber) || isNaN(thirdNumber)) {
        alert(`–ï–µ–µ–µ–µ –Ω—ñ –¥—Ä—É–∂–µ, –º–∏ –¥–æ–º–æ–≤–ª—è–ª–∏—Å—å –ª–∏—à–µ —á–∏—Å–ª–∞`)
    } else {
        alert (`–Æ—Ö—É—É—É üéâ –æ—Å—å —Ç–∞–∫–µ —á–∏—Å–ª–æ –≤–∏–π—à–ª–æ: ${firstNumber + secondNumber + thirdNumber}`);
    } 
}
createNumber(firstNumber, secondNumber, thirdNumber);

/*6. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–æ–≤–∂–∏–Ω—É —ñ —à–∏—Ä–∏–Ω—É –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ —ñ –æ–±—á–∏—Å–ª—é—î –π–æ–≥–æ –ø–ª–æ—â—É. 
–Ø–∫—â–æ –≤ —Ñ—É–Ω–∫—Ü—ñ—é –ø–µ—Ä–µ–¥–∞–ª–∏ 1 –ø–∞—Ä–∞–º–µ—Ç—Ä, —Ç–æ –≤–æ–Ω–∞ –æ–±—á–∏—Å–ª—é—î –ø–ª–æ—â—É –∫–≤–∞–¥—Ä–∞—Ç–∞.*/

// function computeArea(length, width) {
//     if (length === n || width === n ) {
//         alert(`–¢–∏ –Ω–µ –≤–≤—ñ–≤ –æ–¥–Ω–µ —ñ–∑ –∑–Ω–∞—á–µ–Ω—å, –æ—Ç–∂–µ —Ü–µ –ø–ª–æ—â–∞ –∫–≤–∞–¥—Ä–∞—Ç–∞: ${length ** 2 || width ** 2}`)
//     } else {
//         alert(`–ü–ª–æ—â–∞ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞: ${length * width}`);
//     }
// }
// let length = +prompt(`–ó–∞—Ä–∞–∑ –ø–æ—Ä–∞—Ö—É—î–º–æ –ø–ª–æ—â—É –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞. –í–≤–µ–¥–∏ –π–æ–≥–æ –¥–æ–≤–∂–∏–Ω—É:`);
// let width = +prompt(`—ñ —â–µ —à–∏—Ä–∏–Ω—É:`);
// computeArea(length, width);
// -------------------------------------------------------------------------------------------------
function computeArea(length, width) {
    if (width === undefined) {
        return length ** 2;
    } else {
        return length * (width || length);
    }
}
let length = +prompt("–í–≤–µ–¥—ñ—Ç—å –¥–æ–≤–∂–∏–Ω—É –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∞–±–æ —Å—Ç–æ—Ä–æ–Ω—É, —è–∫—â–æ —Ü–µ –∫–≤–∞–¥—Ä–∞—Ç");
let width = +prompt("–í–≤–µ–¥—ñ—Ç—å —à–∏—Ä–∏–Ω—É –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞, —è–∫—â–æ –≤–æ–Ω–∞ —î (–º–æ–∂–Ω–∞ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–∏)");

console.log(computeArea(length, width));

